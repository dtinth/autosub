import fs from "fs";

const parts = JSON.parse(fs.readFileSync("artifacts/parts.json", "utf8"));
const aligned: string[] = [];
for (const { name: partName } of parts) {
  aligned.push(fs.readFileSync(`artifacts/${partName}.alignment.txt`, "utf8"));
}

/**
 * Parse a time string in the format "HH:MM:SS.mmm".
 */
function parseTime(text: string) {
  const parts = text.split(":");
  let sum = 0;
  parts.reverse().forEach((part, i) => {
    sum += parseFloat(part) * Math.pow(60, i);
  });
  return sum;
}

/**
 * Formats time in seconds to "HH:MM:SS.mmm".
 */
function formatTime(time: number) {
  const hours = Math.floor(time / 3600);
  const minutes = Math.floor((time % 3600) / 60);
  const seconds = time % 60;
  return `${hours.toString().padStart(2, "0")}:${minutes
    .toString()
    .padStart(2, "0")}:${seconds.toFixed(3).padStart(6, "0")}`;
}

const lines = aligned.join("\n").split("\n");
const webvtt: string[] = [
  "WEBVTT - Auto-generated by https://github.com/dtinth/autosub",
];
for (const line of lines) {
  const match = line.trim().match(/^\d+, ([^,]+), (.*?), (\S+)$/);
  if (!match) {
    continue;
  }
  const start = parseTime(match[1]);
  const end = parseTime(match[3]);
  const text = match[2];
  webvtt.push("");
  webvtt.push(`${formatTime(start)} --> ${formatTime(end)}`);
  webvtt.push(text);
}
webvtt.push("");

fs.writeFileSync("artifacts/subtitles.vtt", webvtt.join("\n"));
